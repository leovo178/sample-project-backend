version: '3'
services:
  webdev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: nodemon --legacy-watch server.js
    ports:
      - "4001:4000"
    volumes:
      - .:/usr/src/app
      - ./node_modules:/usr/src/app/node_modules
    environment:
      MINIO_ACCESS_KEY: "EGN382IMEPNND2JB46PQ"
      MINIO_SECRET_KEY: "5NwA8Cqx2QCJLa8u3SGUwSzRiKs6DhwbBsbpNbkM"
      MINIO_USE_SSL: "false"
      MINIO_PORT: 9000
      MINIO_END_POINT: "minioInfra"
      MINIO_PUBLIC_END_POINT: "172.76.10.161"
      MONGODB_URL: "mongodb://foobar:foobarPassword@mongodbInfra:27017/simple_db"
      MONGODB_HOST: "mongodbInfra"
      MONGODB_ROOT_USER: "root"
      MONGODB_ROOT_PASSWORD: "root"
      MONGODB_PORT: "27017"
      JWT_PRIVATE_KEY: "privateKey"
      JWT_EXPIRES_IN: "1d"
      BCRYPT_SALT_ROUND: 10
      NODE_ENV: "development"
      APP_PORT: 4000
    networks:
      - localnetwork
  database-backup:
    build:
      context: .
      dockerfile: Dockerfile.backupdb
    command: bash -c "mc config host remove backup-server ; mc config host add backup-server http://minioInfra:9000 EGN382IMEPNND2JB46PQ 5NwA8Cqx2QCJLa8u3SGUwSzRiKs6DhwbBsbpNbkM ; mongodump --uri="mongodb://foobar:foobarPassword@mongodbInfra:27017/simple_db" --archive --gzip | mc pipe backup-server/mongo-backup/backup-archive.gz"
    environment:
      MINIO_ACCESS_KEY: "EGN382IMEPNND2JB46PQ"
      MINIO_SECRET_KEY: "5NwA8Cqx2QCJLa8u3SGUwSzRiKs6DhwbBsbpNbkM"
      MINIO_USE_SSL: "false"
      MINIO_PORT: 9000
      MINIO_END_POINT: "minioInfra"
      MONGODB_URL: "mongodb://foobar:foobarPassword@mongodb:27017/simple_db"
    networks:
      - localnetwork
networks:
  localnetwork:
    external: true
